class Solution {
    bool check(int number) {
        if (number < 0) {
            return false; // Negative numbers can't be perfect squares
        }

        int root = static_cast<int>(sqrt(number));
        return root * root == number;
    }

public:
    int numSquares(int n) {
        if (n < 4) {
            return n;
        }
        std::vector<int> ans(n + 1, 0);
        ans[1] = 1;
        int p = 1;
        for (int i = 2; i <= n; i++) {
            if (check(i)) {
                ans[i] = 1;
                p = i;
            }
         else {
             ans[i]=i;
            
            for(int j=1;j*j<i;j++){
             ans[i]=min(ans[i],ans[i-j*j]+ans[j*j]);
               }
            }
        }
        return ans[n];
    }
};
